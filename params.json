{"name":"Melodiest","tagline":"Sinatra application boilerplate","body":"# Background\r\n\r\nMelodiest is [Sinatra](http://www.sinatrarb.com/) application boilerplate. It provides generator and contains minimum configuration to develop application with Sinatra.\r\nThe reason why I create Melodiest is because I want to create many small web application based on sinatra with other third party ruby gems as foundation.\r\nOriginally, I wanted to name this project as Harmony or Melody, but because it was already taken I decided to name this project as Melodiest.\r\n\r\n### Installation\r\n\r\n```ruby\r\ngem install melodiest\r\n```\r\n\r\nwith Bundler, put this code in your Gemfile:\r\n\r\n```ruby\r\ngem 'melodiest'\r\n```\r\n\r\n### How to Use\r\ngenerate app in current directory without database\r\n\r\n```\r\nmelodiest -n my_app\r\n```\r\n\r\ngenerate app in target directory without database\r\n\r\n```\r\nmelodiest -n my_app -t target/dir\r\n```\r\n\r\ngenerate app in current directory with database. `-d` option will generate app with `Sequel` orm and PostgreSQL adapter.\r\n\r\n```\r\nmelodiest -n my_app -d\r\n```\r\n\r\n### Melodiest::Application\r\nBecause Melodiest is already required Sinatra, you don't have to require 'sinatra' anymore, just require 'melodiest'.\r\n\r\n`Melodiest::Application` is subclass from `Sinatra::Application`.\r\n\r\n```ruby\r\n# my_app.rb\r\n\r\nclass App < Melodiest::Application\r\n  cookie_secret 'this_is_secret_for_encrypted_cookie'\r\n  ...\r\nend\r\n```\r\n\r\n### Example Usage\r\nThis example assume that PostgreSQL is already running and desired database is already exist.\r\nFor complete example see [github.com/kuntoaji/todo_melodiest](https://github.com/kuntoaji/todo_melodiest)\r\n  1. run `melodiest -n my_app -d`\r\n  2. cd `my_app`\r\n  3. run `bundle install`\r\n  4. create `config/database.yml` and configure your database setting\r\n  5. create file `db/migrations/001_create_artists.rb` and put the following code:\r\n  \r\n  ```ruby\r\n  Sequel.migration do\r\n    up do\r\n      create_table(:artists) do\r\n        primary_key :id\r\n        String :name, :null=>false\r\n      end\r\n    end\r\n  \r\n    down do\r\n      drop_table(:artists)\r\n    end\r\n  end\r\n  ```\r\n  \r\n  6. run `rake db:migrate`\r\n  7. create file `app/models/Artist.rb` and put the following code:\r\n  \r\n  ```ruby\r\n  class Artist < Sequel::Model\r\n  end\r\n  ```\r\n  \r\n  8. create file `app/routes/artists.rb` and put the following code:\r\n  \r\n  ```ruby\r\n  class MyApp\r\n    get '/artists' do\r\n      @artists = Artist.all\r\n      erb :\"artists/index\"\r\n    end\r\n    \r\n    post '/artists' do\r\n      @artist = Artist.new\r\n      @artist.name = params[:name]\r\n      @artist.save\r\n      \r\n      redirect '/artists'\r\n    end\r\n  end\r\n  ```\r\n  \r\n  9. create file `app/views/artists/index.erb` and put the following code:\r\n  \r\n  ```erb\r\n  <h1>List of Artist</h1>\r\n  <ul>\r\n    <% @artists.each do |artist| %>\r\n      <li><%= artist.name %></li>\r\n    <% end %>\r\n  </ul>\r\n  \r\n  <form action=\"/artists\" method=\"post\">\r\n    <%= Rack::Csrf.tag(env) %>\r\n    <input type=\"text\" name=\"name\" />\r\n    <button>Submit</button>\r\n  </form>\r\n  ```\r\n  \r\n  10. run the server `bundle exec thin start`\r\n  11. open url `localhost:3000/artists`\r\n\r\n### List of Ruby Gems\r\n\r\n  * sinatra (required by default)\r\n  * sinatra-contrib (required by default)\r\n  * encrypted_cookie (required by default)\r\n  * `Sinatra::Reloader` in development environment only\r\n  * thin\r\n  * `Rack::Session::EncryptedCookie`\r\n  * `Rack::Csrf`\r\n  * sequel\r\n  * sequel_pg as PostgreSQL adapter\r\n  * sinatra-asset-pipeline\r\n  * uglifier\r\n  * tux for console\r\n  * `Sinatra::Cache` in production environment only","google":"UA-71077542-1","note":"Don't delete this file! It's used internally to help with page regeneration."}